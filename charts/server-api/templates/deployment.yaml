apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "server-api.fullname" . }}
  labels:
    {{- include "server-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "server-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "server-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "server-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.efsVolumeClaim }}
        - name: server-api-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s-ebs" .Chart.Name }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: production
            - name: SERVER_ORIGIN
              value: {{ .Values.env.serverOrigin }}
            - name: SQLITE_DB_PATH
              value: {{ .Values.env.sqliteDbPath }}
            - name: NAMESPACE
              value: {{ .Values.namespace }}
            - name: EFF_CLAIM
              value: {{ .Values.efsVolumeClaim }}
            - name: DB_HOST
              value: {{ .Values.db.dbHost }}
            - name: DB_USERNAME
              value: {{ .Values.db.dbUserName }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "server-api.fullname" . }}
                  key: dbPassword
            - name: DB_DATABASE
              value: {{ .Values.db.dbDatabase }}
          command: ['/bin/sh', '-c', 'cd /src/server-api/; node .']
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: persistent-storage
              mountPath: /src/dev/upload-output
            - mountPath: /src/server-api-volume
              name: server-api-volume
              readOnly: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
